i[open]{color: red;}

div[draggable]{cursor: grab;}

.highlight{padding: 4px;border-radius: 4px;background-color: #9a9b94;color: white;}

h5{font-size: 1rem;padding: 8px;margin: 0;}

div[tables-columns]{display: grid;grid-template-columns: max-content max-content; grid-column-gap: 16px;}

/*relations*/
section[options] button[join]{color: #99b19c;}
section[options] button[join-left]{color: #99b19c;}
section[options] button[join-right]{color: #99b19c;}
section[options] button[join-remove]{color: #3b7096;}
section[options] button[hier-order-plus]{color: #3b7096;}
section[options] button[hier-order-minus]{color: #3b7096;}
/*relations*/

@keyframes popup {
  0% {transform: scale(.2);}
  75% {transform: scale(1.10);}
  100% {transition: scale(1);}
}

/* .card-layout{display: grid;grid-template-columns: 100%;position: relative;} */
.cardLayout > section[options]{position: absolute;display: flex;padding: 0 8px;flex-flow: column;left: calc(100% - 46px);
  transition: left 200ms, opacity 200ms;opacity: 0;z-index: 0;}
.cardLayout:not([mode='edit']):hover .cardTable[data-name] ~ section[options]{left: 100%;opacity: 1;transition: left 200ms, opacity 200ms;z-index: 5;}
.cardLayout[mode='edit']{opacity: .5;}

section[options] button{color: dimgrey;}
section[options] > button[metrics]{color: #587850;}
section[options] > button[columns]{color: #9a6a6a;}
section[options] > button[composite-metrics]{color: #9a6a6a;}
/*section[options] > i[filters]{color: #3b7096;}
section[options] > i[groupby]{color: #c7b198;}*/

section[options] > span{margin: 2px 0;position: relative;}

section[options] i ~ small{visibility: hidden;}
section[options] i:hover ~ small{visibility: visible;animation: popup 50ms ease;}

section[options] > span > small{top: 32px;z-index: 5;}

/* section options-hier*/
/*.cardTable section[options-hier]{position: absolute;display: flex;flex-flow: column; right: calc(100% - 46px); padding: 0 8px; transition: right 200ms, opacity 200ms;opacity: 0;z-index: 0;}*/
/*.cardLayout:hover .cardTable > section[options-hier]{right: 100%;opacity: 1; transition: right 200ms, opacity 200ms; padding: 0 8px; z-index: 5;border-radius: 5px;}*/
section[options-hier]{position: absolute;display: flex;flex-flow: column;right: 100%;opacity: 1; padding: 0 8px; z-index: 5;border-radius: 5px;}
section[options-hier] > div{background-color: #494949; color: white; border-radius: 5px;}
section[options-hier] i{color: gainsboro;}
section[options-hier] i:hover{color: white!important;}
section[options-hier] .hierarchy-order{display: flex;justify-content: center;align-items: center;}
/* NOTE: recupero il valore da visualizzare, dall'attributo data-value*/
span.hierarchy-order::after{content: attr(data-value);}


/* dialog TODO:  da spostare in md-dialog.css*/

.formulaDefine{display: grid;grid-template-columns: auto auto auto;grid-gap: 16px;margin: 1em 0;align-items: center;}
.formulaDefine .field, .formulaDefine .formula, .formulaDefine .values{display: grid;grid-template-rows: 15% auto;align-items: center;height: 100%;}
.formulaDefine .title{align-self: flex-start;}

.formulaDefine > .options{align-items: center;display: flex;}
.formulaDefine > .alias, .formulaDefine > .alias{display: flex; flex-direction: column;justify-content: center;}
.formulaDefine .metric-filters{max-height: 450px;overflow-y: auto;width: 100%;}
.formulaDefine > .filtersList{padding: 16px;}
.listContent{align-items: left;display: flex;min-height: 200px;flex-flow: column;}
.valueContent{align-items: center;display: flex;flex-flow: row;}
dialog .values{display: flex;flex-direction: column;padding: 8px;}
dialog .valuesList{display: flex;flex-direction: column;padding: 8px;max-width: 300px;}
dialog .filtersList{display: flex;flex-direction: column;}
dialog .miniList{max-height: 150px;overflow-y: auto;}
dialog .middleList{height: 220px;overflow-y: auto;width: 250px;}
dialog .formula, dialog .field, dialog .values{padding: 8px;}

.name-alias{display: grid;grid-template-columns: auto auto;}
dialog h6{font-size: .85rem;font-weight: normal;padding: 4px;margin: 0;color: #52524e}
dialog small{font-weight: lighter;padding: 4px;}

dialog #between[hidden]{display: none;}
dialog #between{display: flex;flex-direction: column;}
dialog #between > span{padding: 16px;}

/* end dialog */

#formula{background-color: #be7575;padding: 16px;border-radius: 4px;margin: 16px auto;color: white;font-weight: bold;font-size: 1rem;
  display: grid;grid-template-columns: auto auto auto;}
#formula > span{justify-self: center;}

.formulaContent {display: flex;}
div.textarea {border: solid thin gainsboro;height: 120px;padding: 8px;font-size: .8rem;width: 90%;}
div.textarea > span{padding: 4px;color: #494949;}
div.textarea > span.formulaOperator{background: #f9c4aa;border-radius: 4px;margin: 0 8px;}
div.textarea > span.formulaValues{border-bottom: solid thin gray;padding: 4px 16px;}
div.textarea > span.formulaLogicalOperator{background: brown; color: white;}

#content.dragging{opacity: .6;box-shadow: inset 0px 0px 10px 2px grey;}

/*card*/
.card-table ul{max-height: 160px;overflow-y: auto;font-size: .7rem;}

/* colonne all'interno della card/tabella*/
.card.table ul{padding-inline-start: 0; margin-block-start: 4px; font-size: .75rem; border-radius: 4px; min-height: auto; overflow: auto; max-height: 250px;}

.card.table ul > .sublist span{list-style-type: none;display: block;padding: 6px;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;}

.card.table ul > .sublist span[data-key="pk"] {list-style-type: none;display: block;padding: 6px;overflow: hidden;text-overflow: ellipsis;
  white-space: nowrap;background: gainsboro; color: black; border-radius: 4px;}

.card.table{
	width: 270px;background: white;position: absolute;font-size: .8rem; border-radius: 4px; z-index: var(--zindex);
	box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
}


.card.table > .cardLayout{display: grid;grid-template-columns: 100%;position: relative;grid-template-rows: auto auto;}
.card.table > .cardLayout > .cardTable{position: relative;height: fit-content;display: grid;grid-template-areas: "title" "input" "body" "footer";
  z-index: 1;}
.card.table .info{font-size: .7rem;padding: 8px;background: lemonchiffon;border-bottom-left-radius: 4px;border-bottom-right-radius: 4px;}
.card.table[data-mode='relations'] .info{background: #99b19c;color: white;}
.card.table[data-mode='columns'] .info{background: #9a6a6a;color: white;}
.card.table[data-mode='metrics'] .info{background: #587850;color: white;}

.card.table .cardTable > .title{grid-area: title;height: fit-content;background: tan;border-top-left-radius: 4px;
  border-top-right-radius: 4px;display: flex;align-items: flex-start;justify-content: space-between;}

.card.table .cardTable > .title h6{padding: 8px; margin: 0;font-size: .85rem; width: 100%;}
.card.table .cardTable > .title h6:hover{cursor: grab;}
.card.table .cardTable > .title > .title-alias > .subtitle{padding: 0px 0px 4px 12px;color: #494949; font-size: .8rem;}
.card.table .cardTable > .title > .title-alias{width: 100%;}

.card.table[data-fact] .title{background: var(--main-primary-color);color: white;}

.card.table .cardTable > .md-field{grid-area: input;}
.card.table .cardTable > ul{grid-area: body;}
.card.table .cardTable > .info{grid-area: footer;}

/*icona bookmark su tabelle selezionate*/
.card.table[selected] i[data-id="selectTable"]{color: var(--main-primary-color);}

/*nascondo il div dell'ordine gerarchico se .cardTable[data-value="0"]*/
.card.table[data-value="0"] section[options-hier] > div{visibility: hidden;}

.element.dimensions{flex-flow: column;}
.element.dimensions[data-source-db]{flex-flow: column;background: saddlebrown;color: white;}
.element.dimensions > h5:hover{cursor: pointer;color: var(--main-primary-color);}

/*guide*/
.guide{position: absolute;max-width: 300px;}
.guide > .steps{box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);}
.guide > .steps[active]{display: flex;width: auto;background: white;padding: 8px; margin: 4px;}
.guide > .steps:not([active]){display: flex;width: auto;background: white;padding: 8px; margin: 4px;opacity: .4;}
.steps > span{color: var(--main-primary-color);font-size: larger; font-weight: bold;padding: 0 8px;}
.step{display: flex;flex-direction: column;}
.step > small{font-size: .72rem;margin: 8px;}
.step > span.title{font-size: larger;color: var(--main-primary-color);}

/*guide*/

/*hierarchies */
/*#hierarchies{position: relative;display: flex;flex-direction: column;align-items: center; padding: 1em;}*/
.section-content{box-shadow: 0px 1px 3px -1px grey; border-radius: 4px; background-color: white; display: flex; align-items: center; justify-content: center; position: relative; margin-bottom: 4px;}
.hier.table{width: 170px;margin: 8px;text-align: center;margin: 4px;margin-bottom: 16px;
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);}
.hier.table{background: tan;padding: 8px;font-size: .8rem;border-radius: 4px;width: 170px;overflow: hidden;text-overflow: ellipsis;}
.dropzoneHier:last-child .hier.table{background: var(--main-primary-color);color: white;font-weight: bold;}
/*.hier.table:last-child{background: var(--main-primary-color);color: white;}*/
.association{background: #494949;color: white;height: auto; width: 80%;margin: 0 8px;padding: 8px;border-radius: 4px;}
span.before, span.after{width: 80%;height: 5px;position: relative;display: flex;align-items: center;justify-content: center;}
span.before .arrow{height: 10px; width: 10px;background: #494949;display: flex;transform: rotate(45deg);top: 0;position: absolute;}
span.after .arrow{height: 10px; width: 10px;background: #494949;display: flex;transform: rotate(45deg);top: -5px;position: absolute;}
.association > p{margin: 0;}
.hier.fact{color: var(--main-primary-color);margin: 16px;}
/*hierarchies */
/*area*/
.area{width: 100%;height: inherit;display: flex;justify-content: center;align-items: center;border: solid thin gainsboro;}
/*area*/

/*wrapper*/
/* hier struct */
#btn-arrow-open-close{position: absolute; left: -18px;}
.wrapper {display: grid; grid-template-columns: 100%; height: inherit; position: relative; grid-template-rows: 1fr;}
.wrapper #box-hierarchy section[data-hier-id][data-active] {position: relative;display: flex;flex-direction: column;align-items: center; padding: 1em;}
.wrapper #box-hierarchy section[data-hier-id]:not([data-active]) {position: relative;display: flex;flex-direction: column;align-items: center; padding: 1em; height: 45px;}
.wrapper #box-hierarchy section[data-hier-id]:not([data-active]) > div{visibility: hidden;}
#box-hierarchy{display: grid;grid-template-rows: auto 48px; position: relative;}
#box-hierarchy > .bottom-position{position: absolute; bottom: 0px;justify-self: center;}
#hierarchiesContainer{display: grid; grid-template-rows: auto; grid-row-gap: 16px;}
.hierButtons{display: flex; flex-flow: row; justify-content: space-between; width: 100%;}
.hierarchies section[data-id="hierarchies"] .hierarchy-detail{
  position: absolute; top: 0px; align-items: center; width: 100%; display: flex;flex-direction: column;
  transition: opacity 200ms; opacity: 0; visibility: hidden; left: calc(-100% - 32px);
}
.hierarchies section[data-id="hierarchies"]:hover{cursor: pointer;}
.hierarchies section[data-id="hierarchies"]:hover .hierarchy-detail{position: absolute; top: 0px; opacity: 1;left: calc(-100% - 32px);transition: opacity 200ms;visibility: visible;}
.hierarchy-detail > div{display: grid; grid-template-columns: 20% 80%; width: 100%; align-items: center; margin-bottom: 4px; background-color: whitesmoke; box-shadow: 0px 2px 8px -5px black;border-radius: 4px;}
.hierarchy-detail > div > span[data-id]{display: flex; justify-content: center; background-color: #494949; color: white; padding: 8px; border-top-left-radius: 4px; border-bottom-left-radius: 4px;}
.hierarchy-detail > div > span[data-table]{padding: 0px 8px;overflow: hidden;text-overflow: ellipsis;}
/*l'ultimo elemento (ultima tabella della gerarchia) viene colorata in modo diverso*/
.hierarchy-detail > div:last-child > span[data-id]{background-color: sienna; color: white;}

#hierarchies{display: grid; grid-template-rows: 95% 5%; position: absolute; right: -180px; padding: 32px 4px 4px;background-color: #00000024; height: 100%; opacity: .7; transition: transform 250ms;
  transform: translateX(0px); width: 190px;}
#hierarchies[data-open]{transform: translateX(-180px);}
#drop-zone-buttons{position: absolute; height: inherit; display: flex; flex-direction: column; align-items: center; justify-content: center;}
.drop-zone-buttons{background: #494949; display: flex; flex-direction: column; border-top-right-radius: 4px; border-bottom-right-radius: 4px; padding: 8px 0px; box-shadow: 0px 0px 3px 1px black;}

/* hier struct */
/*wrapper*/


/*drop-zone*/
#drop{display: flex;position: relative;overflow: hidden;z-index: 1000;box-shadow: 0px 1px 7px -5px black; height: 100%}
#drop-zone{position: absolute; width: 100%; height: 100%; display: flex;align-items: center; justify-content: center; border: dotted thin darkgrey;font-size: 1.5rem;color: darkgrey;}
/* sto muovendo l'oggetto draggato in un area di drop, elimino il display: flex...center altrimenti esegue il drop dal centro, e non da x: 0 e y: 0 del div*/
#drop-zone.dropping{display: block; align-items: unset; justify-content: unset; border: dotted thin indianred;background-color: white;}
/* terminato il drop reimposto il border lasciando inalterato il display */
#drop-zone.dropped{display: block; align-items: unset; justify-content: unset; border: dotted thin darkgrey; color: black;}
#drop-zone.dropped > span, #drop-zone.dropping > span{display: none;}
#drop-zone.dropped[edit] > span {position: absolute;top: 0px;width: inherit;display: flex;background: #494949;color: white;justify-content: center;font-size: .88rem;padding: 8px;}
/*drop-zone*/

/*lista dimensioni*/
.schema-table{display: flex;flex-direction: column;margin: 6px 0px;padding: 4px 16px;}
.schema-table > span[schema] {color: dimgray;font-size: .8rem;}
.schema-table > span[table] {font-size: .85rem;}
/*lista dimensioni*/

/*lista cubi definiti*/
ul > section[data-sublist-generic]{border: none;}
ul > section[data-sublist-generic]{border-left: solid 0px gainsboro; transition: border-left 150ms;}
ul > section[data-sublist-generic]:hover{cursor: pointer; border-left: solid thick indianred; transition: border-left 150ms;}
/*lista cubi definiti*/

/*minicard*/
.mini-card{display: grid; grid-template-rows: auto auto auto;border: solid thin gainsboro;border-radius: 4px; width: inherit;}
.mini-card > h5{font-size: .9rem; font-weight: normal;padding: 8px;margin: 0px; text-align: left;background-color: beige;}
.mini-card div[data-dimension-tables] .hierarchies{font-weight: lighter;font-size: .85rem; padding: 16px;}
.mini-card div[data-dimension-tables] .hierarchies > .hierarchy > .tables > .schema-table:last-child{color: var(--main-primary-color); font-weight: bold;}
.mini-card-buttons{display: flex;justify-content: space-between;}
.hierarchy{display: grid; grid-template-rows: auto auto;}
ul > section[data-sublist-dimensions]{border: none;}
/*minicard*/

