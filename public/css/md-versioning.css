.wrapper-content{
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.button-icons {
  border: none;
  outline: none;
}

.grid-layout{
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  flex-flow: column;
  align-items: center;
  overflow: hidden;
  background-color: white;
  box-shadow: 0 1px 4px 3px lightgrey;
  border-radius: 2px;
}

.grid-layout > .content{
  display: grid;
  grid-template-rows: auto 1fr auto;
  width: 100%;
  height: 100%;
}

.grid-layout > .content > .body.grid-section-2 {
  display: grid;
  grid-template-rows: auto 1fr 1fr;
}

.grid-layout > .content > .body.grid-section-2 .objects {
  display: grid;
  /* grid-template-columns: repeat(auto-fill, 340px); */
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  /* grid-auto-rows: 380px; */
}

ul {
  overflow: auto;
}

li {
  display: grid;
  grid-template-columns: 1fr 1fr auto;
}

ul > li > .li-content, ul > li > .li-buttons{
  display: flex;
  align-items: center;
}

.li-content > .li-content-details{
  display: flex;
  flex-flow: column;
}

/* elementi presenti in storage/DB. */
li[data-sync="true"] {
  color: lightskyblue;
}

li[data-sync="false"] {
  color: dimgray;
}

/* nascondo tutti i button dentro <li> per poi visualizzarli in base ai data-attribute*/
li > .li-buttons button {visibility: hidden;}

/* in questo caso visualizzo solo l'icona delete, gli oggetti sono sincornizzati ed identici*/
li[data-identical="true"] {
  color: darkgreen;
}

li[data-identical="true"] button[data-delete] {
  visibility: visible;
}

li[data-identical="false"] {
  color: indianred;
}

li[data-identical="false"] button[data-download],
li[data-identical="false"] button[data-upgrade],
li[data-identical="false"] button[data-delete] {
  visibility: visible;
}

/* risorsa presente in locale ma NON sul DB*/
li[data-sync="false"][data-storage="local"] button[data-upload],
li[data-sync="false"][data-storage="local"] button[data-delete] {
  visibility: visible;
}

/* risorsa disponibile sul DB ma NON in localStorage*/
li[data-sync="false"][data-storage="db"] button[data-download],
li[data-sync="false"][data-storage="db"] button[data-delete] {
  visibility: visible;
}

/* NOTE: esempio di media query per responsive layout */
@media screen and (min-width: 1024px) {
  .grid-layout > .content > .body.grid-section-2 .objects {
    grid-template-columns: repeat(auto-fill, minmax(calc(50% - 2em), 1fr));
    grid-column-gap: 1em;
    padding: 0em 1em;
    position: relative;
  }
}

/* .objects[data-local]::before {
  position: absolute;
  content: 'Elementi in locale';
  top: 1em;
  left: 1em;
  color: #494949;
  padding: 1em;
  z-index: 10;
} */
