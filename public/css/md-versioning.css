.wrapper-content{
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.button-icons {
  border: none;
  outline: none;
}

.grid-layout{
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  flex-flow: column;
  align-items: center;
  overflow: hidden;
  background-color: white;
  box-shadow: 0 1px 4px 3px lightgrey;
  border-radius: 2px;
}

.grid-layout > .content{
  display: grid;
  grid-template-rows: 1fr auto;
  grid-row-gap: 1em;
  width: 100%;
  height: 100%;
}

.grid-layout > .content > .body.grid-section-2 {
  display: grid;
  grid-template-rows: 1fr;
  padding: 1em;
}

/* .grid-layout > .content > .body.grid-section-2 .objects { */
.objects {
  display: grid;
  /* grid-template-columns: repeat(auto-fill, 340px); */
  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
  /* grid-auto-rows: 380px; */
  grid-gap: 1em;
}

ul {
  overflow: auto;
}

li {
  display: grid;
  grid-template-columns: auto 1fr auto;
  grid-column-gap: 8px;
  margin: 6px 4px;
}

ul > li > .li-content, ul > li > .li-buttons{
  display: flex;
  align-items: center;
}

/* .li-content:hover > div {
  font-weight: bold;
  background-color: #ebebeb;
  border-radius: 2px;
} */

.li-content:hover {
  font-weight: bold;
  background-color: #ebebeb;
  border-radius: 2px;
}

.li-content[data-selected] {
  font-weight: bold;
  background-color: #ebebeb;
  border-radius: 2px;
}

.li-content > .li-content-details{
  display: flex;
  flex-flow: column;
}

/* elementi presenti in storage/DB. */
li[data-sync="true"] {
  color: lightskyblue;
}

li[data-sync="false"] {
  color: dimgray;
}

li[data-sync="false"][data-storage="db"] {
  color: steelblue;
}

/* nascondo tutti i button dentro <li> per poi visualizzarli in base ai data-attribute*/
li:not(:hover) > .li-buttons button {visibility: hidden;}

/* in questo caso visualizzo solo l'icona delete, gli oggetti sono sincornizzati ed identici*/
li[data-identical="true"] {
  color: seagreen;
}

/* li:not(:hover)[data-identical="true"] button[data-delete] {
  visibility: visible;
} */

li:hover[data-identical="true"] button[data-delete] {
  visibility: visible;
}

li[data-identical="false"] {
  color: indianred;
}

/* risorse prenti su db ma non in locale */
li:hover[data-sync="false"][data-storage="db"] button[data-download] {
  visibility: visible;
}

li:hover[data-sync="false"][data-storage="db"] button[data-upload],
li:hover[data-sync="false"][data-storage="db"] button[data-upgrade] {
  visibility: hidden;
}

/* risorsa presente in locale ma NON sul DB*/
li:hover[data-sync="false"][data-storage="local"] button[data-upload],
li:hover[data-sync="false"][data-storage="local"] button[data-delete] {
  visibility: visible;
}

li:hover[data-sync="false"][data-storage="local"] button[data-download],
li:hover[data-sync="false"][data-storage="local"] button[data-upgrade] {
  visibility: hidden;
}

/* risorse sincronizzate */
li:hover[data-sync="true"][data-storage="local"] button[data-upload],
li:hover[data-sync="true"][data-storage="local"] button[data-download],
li:hover[data-sync="true"][data-storage="local"] button[data-upgrade] {
  visibility: hidden;
}

/* risorse sincronizzate ma non identiche */
li:hover[data-sync="true"][data-storage="local"][data-identical="false"] button[data-download],
li:hover[data-sync="true"][data-storage="local"][data-identical="false"] button[data-delete],
li:hover[data-sync="true"][data-storage="local"][data-identical="false"] button[data-upgrade] {
  visibility: visible;
}

li:hover[data-sync="true"][data-storage="local"][data-identical="false"] button[data-upload] {
  visibility: hidden;
}

/* risorsa disponibile sul DB ma NON in localStorage*/
li:hover[data-sync="false"][data-storage="db"] button[data-download],
li:hover[data-sync="false"][data-storage="db"] button[data-delete] {
  visibility: visible;
}

/* NOTE: esempio di media query per responsive layout */
@media screen and (min-width: 1024px) {
  .grid-layout > .content > .body.grid-section-2 .objects {
    grid-template-columns: repeat(auto-fill, minmax(calc(50% - 2em), 1fr));
    grid-column-gap: 1em;
    /* padding: 0em 1em; */
    position: relative;
  }
}

.details {
  display: grid;
  /* grid-template-rows: auto 3fr 1fr; */
  grid-template-rows: auto;
  grid-row-gap: 1em;
  background-color: white;
}

.details.menu section{
  grid-template-rows: 1fr;
}

.details.menu section[hidden]{
  display: none;
}


.details h6 {
  /* padding: 8px 16px; */
  font-weight: bold;
  font-size: .9rem;
  color: steelblue;
}

.details.reverse {
  grid-template-rows: 1.5fr 2fr;
}

.details > section {
  position: relative;
  display: grid;
  padding: 3em 0em 2em;
  grid-template-rows: auto 1fr;
}

.details > section[data-attr] {
  grid-template-rows: 1fr;
}

menu.allButtons {
  position: absolute;
  right: 1em;
}

.item-resources {
  display: grid;
  grid-template-columns: 2fr 3fr;
}

.items-menu {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-inline-end: 40px;
}

li button {
  visibility: hidden;
}

li:hover button {
  visibility: visible;
}

li input:not(:checked) {
  visibility: hidden;
}

li:hover input {
  visibility: visible;
}

li input:checked {
  visibility: visible;
}

.hideableButtons {
  position: absolute;
  bottom: 4px;
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: center;
}
